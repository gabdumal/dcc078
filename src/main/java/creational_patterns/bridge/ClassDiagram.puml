@startuml
'https://plantuml.com/class-diagram

package creational_patterns{

    package bridge {

        package EnginePackage as "Engine" {

            interface Engine {
                double costIncreasePercentage()
            }

            class Diesel implements Engine {
                + double costIncreasePercentage()
            }

            class Electric implements Engine {
                + double costIncreasePercentage()
            }

            class Ethanol implements Engine {
                + double costIncreasePercentage()
            }

            class Gasoline implements Engine {
                + double costIncreasePercentage()
            }

            class NaturalGas implements Engine {
                + double costIncreasePercentage()
            }

        }

        package ModelPackage as "Model" {

            abstract class Model {
                # double baseCost
                # Engine engine
                + Model(double baseCost)
                + void setBaseCost(double baseCost)
                + void setEngine(Engine engine)
                + {abstract} double calculateFinalCost()
            }
            Model::engine -> Engine

            class HatchBack extends Model {
                - int doorsAmount
                + HatchBack(double baseCost)
                + void setDoorsAmount(int doorsAmount)
                + double calculateFinalCost()
            }

            class Sedan extends Model {
                + Sedan(double baseCost)
                + double calculateFinalCost()
            }

            class Pickup extends Model {
                - boolean hasCover
                + Pickup(double baseCost)
                + void setDoorsAmount(boolean hasCover)
                + double calculateFinalCost()
            }

        }

    }

}

@enduml
